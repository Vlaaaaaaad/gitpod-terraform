name: Build and push image

on:
  push:
  schedule:
    - cron: '0 12 * * *'

env:
  AWS_ECR_PUBLIC_REGISTRY_ALIAS: "vlaaaaaaad"
  AWS_ECR_PUBLIC_REPO_NAME: "gitpod-terraform"

jobs:
  aws_ecr_public:
    name: Amazon ECR Public
    runs-on: ubuntu-latest

    steps:
      - name: Get the code
        uses: actions/checkout@v2

      - name: Prepare for container image build
        id: prepare
        run: |
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"
          echo "::set-output name=version::$(date '+%Y-%m-%d')"
          
          ECR_PUBLIC_SHA_TAG="public.ecr.aws/${{ env.AWS_ECR_PUBLIC_REGISTRY_ALIAS }}/${{ env.AWS_ECR_PUBLIC_REPO_NAME }}:${{ github.sha }}"
          TAGS=$ECR_PUBLIC_SHA_TAG
          echo "üè∑Ô∏è Added container tag: ${ECR_PUBLIC_SHA_TAG}"
          
          if [[ "${{ github.ref }}" == 'refs/heads/main' ]]; then
            ECR_PUBLIC_DATE_TAG="public.ecr.aws/${{ env.AWS_ECR_PUBLIC_REGISTRY_ALIAS }}/${{ env.AWS_ECR_PUBLIC_REPO_NAME }}:$(date '+%Y-%m-%d')"
            ECR_PUBLIC_LATEST_TAG="public.ecr.aws/${{ env.AWS_ECR_PUBLIC_REGISTRY_ALIAS }}/${{ env.AWS_ECR_PUBLIC_REPO_NAME }}:latest"
            
            TAGS+=", ${ECR_PUBLIC_DATE_TAG}, ${ECR_PUBLIC_LATEST_TAG}"
            echo "üè∑Ô∏è Added container tag: ${ECR_PUBLIC_DATE_TAG}"
            echo "üè∑Ô∏è Added container tag: ${ECR_PUBLIC_LATEST_TAG}"
          fi
          
          echo "::set-output name=tags::${TAGS}"
          echo "üè∑Ô∏è Final list of container image tags: ${TAGS}"

      - name: Login to AWS ECR Public
        uses: docker/login-action@v1
        with:
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push to AWS ECR Public
        uses: docker/build-push-action@v2
        with:
          context: .
          no-cache: true # Waiting for https://github.com/docker/buildx/pull/535
          file: ./Dockerfile
          platforms: linux/amd64
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.vendor=${{ github.event.repository.owner.login }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prepare.outputs.version }}
            org.opencontainers.image.created=${{ steps.prepare.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          push: true
          tags: ${{ steps.prepare.outputs.tags }}
